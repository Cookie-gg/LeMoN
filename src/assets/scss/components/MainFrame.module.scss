.entire {
  position: fixed;
  top: 0;
  left: 0;

  @include max(transition, $sp_value: left $common_anmt);
  @include max(z-index, 1); // width Header.module.scss

  &.home {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100vh;
    overflow: hidden;
    pointer-events: none;

    & + .wire {
      &::before,
      &::after {
        box-sizing: border-box;
        width: 0;
        height: 0;
        pointer-events: none;
        position: absolute;
      }
      &::before {
        transition: height $common_anmt entry_order(1), width $common_anmt entry_order(2);
        content: '';
        border-top: 1px solid $lemon;
        border-right: 1px solid $lemon;

        @include max(right, #{30px}, 20px);
        @include max(bottom, #{30px}, 20px);
      }
      &::after {
        transition: opacity 0s entry_order(3), height $common_anmt entry_order(3), width $common_anmt entry_order(4);
        content: '';
        border-bottom: 1px solid $lemon;
        border-left: 1px solid $lemon;
        opacity: 0;

        @include max(top, #{30px}, 20px);
        @include max(left, #{30px}, 20px);
      }
    }
    [class*='mounted'] + header + & + .wire {
      &::before,
      &::after {
        @include max(width, calc(100% - (30px * 2)), diff(100%, (20px * 2)));
        @include max(height, calc(100% - (30px * 2)), diff(100%, (20px * 2)));
      }
      &::after {
        opacity: 1;
      }
    }
  }
  &:not(.home) {
    overflow-x: hidden;
    overflow-y: auto;

    @include max(width, calc(100% - (30px + 11px + 30px) - (30px - 8px + 30px + 11px)));
    @include max(padding, #{0px (30px - 8px) 0px 30px});
    @include max(padding-left, $sp_value: 20px);
    @include max(
      margin,
      #{(30px + 11px + 110px) (30px + 11px) (30px + 11px + 30px)},
      (20px + 75px) (20px + 7px) (20px + 20px) 20px
    );
    @include max(
      height,
      calc(100% - (30px + 11px + 110px) - (30px + 11px + 30px)),
      diff(100%, (20px + 75px + 20px + 20px))
    );

    &.ios {
      @include max(width, $sp_value: diff(100%, 20px + 20px + 20px + 20px));
      @include max(padding-right, $sp_value: 20px);
    }
    &:not(.ios) {
      @include max(width, $sp_value: diff(100%, 20px + 20px + 20px - 8px + 20px));
      @include max(padding-right, $sp_value: 5px); // (20px - 8px) / 2
    }
    & + .wire {
      outline: 1px solid $lemon;

      @include max(outline-offset, #{-31px}, -21px);
    }
  }
  [class*='header_opened'] + & {
    &,
    & + .wire {
      @include max(left, $sp_value: 70px);
    }
  }
  [class*='header_expanded'] + & {
    &,
    & + .wire {
      @include max(left, $sp_value: 200px);
    }
  }
}
.wire {
  transition: left $common_anmt;
  width: 100%;
  height: 100%;
  pointer-events: none;
  position: fixed;
  top: 0;
  left: 0;
}

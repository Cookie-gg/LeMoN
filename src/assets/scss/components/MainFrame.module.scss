.main {
  align-items: center;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  left: 0;
  position: relative;

  @include max(padding-top, calc(30px + 11px + 110px));

  @include max(padding-left, calc(30px + 11px + 40px));

  @include max(padding-right, calc(30px + 11px + 40px));

  @include max(padding-bottom, calc(30px + 11px + 40px));

  @include add(padding-top, $sp_value: (20px + 60px), $from: 11px);

  @include add(padding-left, $sp_value: (20px + 30px), $from: 11px);

  @include add(padding-right, $sp_value: (20px + 30px), $from: 11px);

  @include add(padding-bottom, $sp_value: (20px + 30px), $from: 11px);

  @include max(transition, $sp_value: left $common_anmt);

  &.home {
    height: 100vh;
    padding: 0;
    width: 100%;
    overflow: hidden;
  }
  &.opened {
    @include max(left, $sp_value: 70px);
    &::before {
      @include max(right, $sp_value: -50px);
    }
    &::after {
      @include max(left, $sp_value: 90px);
    }
    &.expanded {
      @include max(left, $sp_value: 200px);
      &::before {
        @include max(right, $sp_value: -180px);
      }
      &::after {
        @include max(left, $sp_value: 220px);
      }
    }
  }

  &::before,
  &::after {
    box-sizing: border-box;
    height: 0;
    pointer-events: none;
    position: fixed;
    width: 0;
    z-index: 3;
  }
  &::before {
    border-right: 1px solid $lemon;
    border-top: 1px solid $lemon;
    content: '';
    transition: height $common_anmt entry_order(1), width $common_anmt entry_order(2), right $common_anmt;

    @include max(bottom, #{30px}, 20px);

    @include max(right, #{30px}, 20px);
  }
  &::after {
    border-bottom: 1px solid $lemon;
    border-left: 1px solid $lemon;
    content: '';
    opacity: 0;
    transition: opacity $moment entry_order(3), height $common_anmt entry_order(3), width $common_anmt entry_order(4),
      left $common_anmt;

    @include max(left, #{30px}, 20px);

    @include max(top, #{30px}, 20px);
  }
  &.mounted {
    &::before,
    &::after {
      height: calc(100% - 30px * 2);
      opacity: 1;
      width: calc(100% - 30px * 2);

      @include diff(width, $sp_value: 20px * 2);

      @include diff(height, $sp_value: 20px * 2);
    }
  }
  & > *:not([class*='exclude']) {
    animation: fade_in 1s both;
  }
}
@keyframes fade_in {
  from {
    opacity: 0;
    visibility: hidden;
  }
  to {
    opacity: 1;
    visibility: visible;
  }
}

.entire {
  box-sizing: border-box;
  display: flex;
  padding: 11px;
  position: fixed;
  z-index: 3;

  @include max(top, #{30px}, 20px);

  @include max(left, #{30px}, 20px);

  ul {
    @include media(sp) {
      align-items: flex-end;
      background-color: rgba(white, 0.05);
      border-left: 5px solid $lemon;
      box-sizing: border-box;
      display: flex;
      flex-direction: column;
      height: 100%;
      justify-content: space-evenly;
      overflow: hidden;
      position: fixed;
      top: 0;
      transition: all $common_anmt;

      @include max(left, $sp_value: -70px);

      @include max(width, $sp_value: 70px);

      li {
        box-sizing: border-box;
        position: relative;
        user-select: none;
        width: 100%;

        @include hover(true) {
          &:hover {
            &::before {
              width: 100%;
            }
            .name {
              color: $dark-gray;
              -webkit-font-smoothing: antialiased;
              -webkit-text-stroke-color: $dark-gray;
              -webkit-text-stroke-width: 1.25px;
            }
            svg path {
              color: $dark-gray;
            }
          }
        }

        &::before {
          background-color: $lemon;
          content: '';
          height: 100%;
          left: 0;
          position: absolute;
          top: 0;
          transition: width $common_anmt;
          width: 0;
          z-index: -1;
        }
        a {
          align-items: center;
          display: flex;
          justify-content: center;
          width: 100%;

          @include max(padding-top, $sp_value: 10px);

          @include max(padding-bottom, $sp_value: 10px);

          svg {
            @include max(font-size, $sp_value: 25px);
            path {
              color: white;
              transition: color $common_anmt;
            }
          }
          .name {
            display: none;
            font-weight: 300;
            position: relative;

            @include max(font-size, $sp_value: 20px);

            @include max(top, $sp_value: 2px);
          }
        }
        &.active,
        &.lower_active {
          &::before {
            width: 100%;
          }
          .name {
            color: $dark-gray;
            -webkit-font-smoothing: antialiased;
            -webkit-text-stroke-color: $dark-gray;
            -webkit-text-stroke-width: 1.25px;
          }
          svg path {
            color: $dark-gray;
          }
          &.active {
            pointer-events: none;
          }
        }
      }
      .arrow {
        align-items: center;
        box-sizing: border-box;
        color: rgba(white, 0.5);
        cursor: pointer;
        display: flex;
        justify-content: center;
        transform: translateX(-2.5%) scaleY(1.5);
        width: calc(100% - 4px);

        @include max(letter-spacing, $sp_value: -5px);

        @include max(font-size, $sp_value: 25px);
      }
      &.opened {
        left: 0px;
        &.expanded {
          @include max(width, $sp_value: 200px);
          .name {
            display: inline-block;

            @include max(margin-left, $sp_value: 12.5px);
          }
          .arrow {
            transform: translateX(0%) scaleY(1.5) rotate(-180deg);
          }
        }
      }
    }

    @include media(pc) {
      align-items: center;
      background-clip: content-box;
      background-color: rgba(#ffffff, 0.1);
      border-bottom: 1px solid $lemon;
      display: flex;
      font-size: 20px;
      font-style: italic;
      font-weight: 300;
      height: 60px;
      left: -35px;
      padding-bottom: 10px;
      position: relative;
      top: 0;
      transition: all $common_anmt;
      width: 0;
      &::before {
        background: linear-gradient(to top left, rgba(255, 255, 255, 0) 50%, rgba(#ffffff, 0.1) 50.75%) no-repeat top
          left/100% 100%;
        content: '';
        height: 60px;
        position: absolute;
        right: 0;
        top: 0;
        transition: all $common_anmt order(2);
        width: 0;
      }
      &::after {
        background-color: $lemon;
        content: '';
        height: 0;
        position: absolute;
        right: -35px;
        top: 0;
        top: 2px;
        transform: skewX(-30deg);
        transition: all $common_anmt order(1);
        width: 2.5px;
      }
      li {
        align-items: center;
        display: flex;
        opacity: 0;
        visibility: hidden;

        &:not(:first-of-type) {
          margin-left: 30px;
          &::before {
            background-color: $lemon;
            content: '';
            height: 30px;
            margin-right: 30px;
            opacity: 0.75;
            transform: rotate(30deg);
            width: 0.5px;
          }
        }
        &:first-of-type {
          margin-left: 90px;
        }
        a {
          position: relative;
          span {
            transition: color $common_anmt;

            @include max(display, inline, none);
          }
          &::before {
            background-color: $lemon;
            content: '';
            height: 140%;
            position: absolute;
            top: 50%;
            transform: translateY(-50%) skewX(-30deg);
            transition: all $common_anmt;
            width: 0%;
            z-index: -1;

            @include max(left, #{-10px}, -55%);
          }
        }
        &.active > a,
        &.lower_active > a,
        &:not(.active) > a:hover {
          span {
            color: $dark-gray;
            -webkit-font-smoothing: antialiased;
            -webkit-text-stroke-color: $dark-gray;
            -webkit-text-stroke-width: 0.65px;
          }
          path {
            color: $dark-gray;
          }
          &::before {
            width: calc(100% + 20px);
          }
        }
        &.active > a {
          pointer-events: none;
        }
      }
      &.opened {
        width: 650px;
        &::before {
          right: calc(-60px / #{$route_3});
          transition: all $common_anmt order(1);
          width: calc(60px / #{$route_3});
        }
        &::after {
          height: 80px;
          right: -25px;
          top: 0;
        }
        li {
          animation: flash_once 0.1s linear forwards order(2);
        }
      }
    }
  }
  button {
    border-top: 1px solid $lemon;
    cursor: pointer;
    display: flex;
    flex-direction: column;
    left: 0;
    position: relative;
    transition: width $common_anmt entry_order(4), left $common_anmt;
    width: 0px;
    z-index: 1;

    @include max(height, #{60px}, 60px);

    &:hover,
    &.opened,
    &.closing:not(:hover) {
      span {
        @include max(height, #{120px}, 120px);

        &::before {
          opacity: 1;
          visibility: visible;
        }
      }
      &.opened {
        @include max(left, $sp_value: 70px);
        &.expanded {
          @include max(left, $sp_value: 200px);
        }
        &::before {
          @include max(margin-left, $sp_value: 15px);
        }
        &::after {
          @include max(margin-left, $sp_value: 30px);
        }
        span::before {
          content: 'CLOSE';

          @include max(letter-spacing, #{2px}, 2px);

          @include max(top, #{30px}, 32px);
        }
      }
    }

    &::before,
    &::after {
      background-color: $lemon;
      content: '';
      height: 1px;
      transition: width $common_anmt entry_order(4), margin-left $common_anmt;
      width: 0;

      @include max(margin-top, #{15px}, 15px);
    }
    span {
      background: linear-gradient(to top left, rgba(255, 255, 255, 0) 50%, $lemon 50.75%) no-repeat top left/100% 100%;
      box-sizing: border-box;
      height: 0;
      inset: -1px 0 0;
      position: absolute;
      transition: height $common_anmt;

      @include max(width, calc(120px / #{$route_3}), 120px / $route_3);

      &::before {
        color: $dark-gray;
        content: 'OPEN';
        font-weight: 600;
        opacity: 0;
        position: absolute;
        transform: rotate(90deg);
        transition: all 0.2s $ex_ease_out;
        visibility: hidden;

        @include max(font-size, #{16px}, 17px);

        @include max(top, #{30px}, 32px);

        @include max(letter-spacing, #{4px}, 4px);

        @include max(left, #{-18px}, -18px);
      }
    }
  }
  &.mounted {
    button {
      @include max(width, #{60px}, 60px);

      &::before {
        @include max(width, #{45px}, 45px);
      }
      &::after {
        @include max(width, #{30px}, 30px);
      }
    }
  }
}
@keyframes flash_once {
  0% {
    opacity: 1;
    visibility: visible;
  }
  50% {
    opacity: 0;
    visibility: hidden;
  }
  100% {
    opacity: 1;
    visibility: visible;
  }
}

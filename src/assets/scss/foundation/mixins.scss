$breakPoints: (
  'mobile': '(hover: none) and (pointer: coarse) and (any-hover: none) and (any-pointer: coarse)',
  'sp': 'screen and (max-width: 819px)',
  'pc': 'screen and (min-width: 820px)',
  'dark': '(prefers-color-scheme: dark)',
);
@mixin media($bp: sp) {
  @media #{map-get($breakPoints, $bp)} {
    @content;
  }
}
$fixed_point: (
  pc: 1582,
  sp: 500,
);
@mixin max(
  $property,
  $value: initial,
  $sp_value: initial,
  $fixed: false,
  $sp_fixed: initial,
) {
  @if $fixed == true and $sp_fixed == initial {
    $sp_fixed: true;
  }
  @if $value != initial {
    @include media(pc) {
      @if type-of($value) == number and $fixed == false {
        @if unit($value) == 'px' {
          $value: number(str_replace('px', '', $value));
          #{$property}: $value * 100 * 0.00063211125158027812895069532237674 + 0vw;
          @media screen and (min-width: map-get($fixed_point, 'pc') + 0px) {
            #{$property}: $value + 0px;
          }
        } @else {
          #{$property}: $value;
        }
      } @else {
        #{$property}: $value;
      }
    }
  }
  @if $sp_value != initial {
    @include media(sp) {
      @if type-of($sp_value) == number and $sp_fixed == false {
        @if unit($sp_value) == 'px' {
          $sp_value: number(str_replace('px', '', $sp_value));
          #{$property}: $sp_value * 100 * 0.002 + 0vw;
          @media screen and (min-width: map-get($fixed_point, 'sp') + 0px) {
            #{$property}: $sp_value + 0px;
          }
        } @else {
          #{$property}: $sp_value;
        }
      } @else {
        #{$property}: $sp_value;
      }
    }
  }
}

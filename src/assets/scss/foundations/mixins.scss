@use 'sass:math';
@use 'sass:map';

// fixed points
$f_pc: 1562;
$f_sp: 500;
// break points
$b_pc: 820;
$b_sp: 819;
// queries
$queries: (
  mobile: '(hover: none) and (pointer: coarse) and (any-hover: none) and (any-pointer: coarse)',
  dark: '(prefers-color-scheme: dark)',
  pc: 'screen and (min-width: 820px)',
  sp: 'screen and (max-width: 819px)',
);

@mixin media($type) {
  @media #{map.get($queries, $type)} {
    @content;
  }
}

@mixin diff($property, $value: initial, $sp_value: initial, $from: 100%, $add_term: '') {
  @if $value != initial {
    @include media(pc) {
      $value: strip_unit($value);
      #{$property}: calc((#{$from} - #{$value * 100 * math.div(1, $f_pc) + 0vw}) #{$add_term});
      @media screen and (min-width: #{$f_pc + 0px}) {
        #{$property}: calc((#{$from} - #{$value + 0px}) #{$add_term});
      }
    }
  }
  @if $sp_value != initial {
    @include media(sp) {
      $sp_value: strip_unit($sp_value);
      #{$property}: calc((#{$from} - #{$sp_value * 100 * math.div(1, $f_sp) + 0vw}) #{$add_term});
      @media screen and (min-width: #{$f_sp + 0px}) {
        #{$property}: calc((#{$from} - #{$sp_value + 0px}) #{$add_term});
      }
    }
  }
}

@mixin add($property, $value: initial, $sp_value: initial, $from: 100%, $add_term: '') {
  @if $value != initial {
    @include media(pc) {
      $value: strip_unit($value);
      #{$property}: calc((#{$from} + #{$value * 100 * math.div(1, $f_pc) + 0vw}) #{$add_term});
      @media screen and (min-width: #{$f_pc + 0px}) {
        #{$property}: calc((#{$from} + #{$value + 0px}) #{$add_term});
      }
    }
  }
  @if $sp_value != initial {
    @include media(sp) {
      $sp_value: strip_unit($sp_value);
      #{$property}: calc((#{$from} + #{$sp_value * 100 * math.div(1, $f_sp) + 0vw}) #{$add_term});
      @media screen and (min-width: #{$f_sp + 0px}) {
        #{$property}: calc((#{$from} + #{$sp_value + 0px}) #{$add_term});
      }
    }
  }
}

@mixin max($property, $value: initial, $sp_value: initial, $width: 0, $important: false) {
  @if $value != initial {
    @media screen and (min-width: if($width == 0, $b_pc + 0px, $width + 1px)) {
      @if type-of($value) == number and unit($value) == 'px' {
        $value: strip_unit($value);
        #{$property}: $value * 100 * math.div(1, $f_pc) + 0vw#{if($important, !important, '')};
        @media screen and (min-width: #{$f_pc + 0px}) {
          #{$property}: $value + 0px#{if($important, !important, '')};
        }
      } @else {
        #{$property}: $value#{if($important, !important, '')};
      }
    }
  }
  @if $sp_value != initial {
    @media screen and (max-width: if($width == 0, $b_sp + 0px, $width)) {
      @if type-of($sp_value) == number and unit($sp_value) == 'px' {
        $sp_value: strip_unit($sp_value);
        #{$property}: $sp_value * 100 * math.div(1, $f_sp) + 0vw#{if($important, !important, '')};
        @media screen and (min-width: #{$f_sp + 0px}) {
          #{$property}: $sp_value + 0px#{if($important, !important, '')};
        }
      } @else {
        #{$property}: $sp_value#{if($important, !important, '')};
      }
    }
  }
}

@mixin custom_max($property, $value, $min_width) {
  #{$property}: math.div(strip_unit($value) * 100 * 1, strip_unit($min_width)) + 0vw;
  @media screen and (min-width: $min_width) {
    #{$property}: $value;
  }
}

@mixin hover($hover_available) {
  @if $hover_available == false {
    @media (hover: none) and (pointer: coarse) and (any-hover: none) and (any-pointer: coarse) {
      @content;
    }
  } @else if $hover_available == true {
    @media (hover: hover) and (pointer: fine) and (any-hover: hover) and (any-pointer: fine) {
      @content;
    }
  } @else {
    @media (hover: hover) and (pointer: fine) and (any-hover: hover) and (any-pointer: fine) {
      &:hover {
        @content;
      }
    }
    @media (hover: none) and (pointer: coarse) and (any-hover: none) and (any-pointer: coarse) {
      @content;
    }
  }
}

@mixin bold($width, $color: $dark_gray) {
  -webkit-font-smoothing: antialiased;
  -webkit-text-stroke-color: $dark_gray;
  -webkit-text-stroke-width: $width;
}
